{"version":3,"sources":["components/FilterButton.js","components/ProjectFilter.js","components/FontAwesomeIcon.js","components/Header.js","components/App.js","index.js"],"names":["useStyles","makeStyles","unSelected","color","backgroundColor","selected","FilterButton","props","label","onFilterClick","value","classes","Button","root","onClick","filters","all","openSource","personal","professional","container","marginTop","ProjectFilter","useState","filter","setFilter","handleFilterClick","selectedFilter","className","Grid","justify","spacing","item","FontAwesomeIcon","name","React","useEffect","loadCSS","document","querySelector","Icon","clsx","defaultProps","portfolioIcon","fontSize","centerText","textAlign","title","fontWeight","subTitle","Header","xs","Typography","variant","paddingTop","App","bodyAttributes","style","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a13ff8a9.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n  unSelected: {\n    color: '#333335',\n    backgroundColor: 'white',\n    '&:hover': {\n      backgroundColor: '#2CCD70',\n      color: 'white',\n    },\n  },\n  selected: {\n    backgroundColor: '#2CCD70',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#2CCD70',\n    },\n  },\n});\n\nfunction FilterButton(props) {\n  const {\n    selected, label, onFilterClick, value,\n  } = props;\n  const classes = useStyles();\n  return (\n    <Button\n      classes={{ root: selected ? classes.selected : classes.unSelected }}\n      onClick={() => { onFilterClick(value); }}\n    >\n      {label}\n    </Button>\n  );\n}\n\nFilterButton.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default FilterButton;\n","import React, { useState } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/styles';\nimport FilterButton from './FilterButton';\n\nconst filters = {\n  all: 1,\n  openSource: 2,\n  personal: 3,\n  professional: 4,\n};\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: '10px',\n  },\n});\n\nfunction ProjectFilter() {\n  const classes = useStyles();\n  const [filter, setFilter] = useState(0);\n  const handleFilterClick = (selectedFilter) => {\n    setFilter(selectedFilter);\n  };\n\n  return (\n    <div className={classes.container}>\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item>\n          <FilterButton label=\"All\" value={filters.all} selected={filter === filters.all} onFilterClick={handleFilterClick} />\n        </Grid>\n        <Grid item>\n          <FilterButton label=\"Open Source\" value={filters.openSource} selected={filter === filters.openSource} onFilterClick={handleFilterClick} />\n        </Grid>\n        <Grid item>\n          <FilterButton label=\"Personal\" value={filters.personal} selected={filter === filters.personal} onFilterClick={handleFilterClick} />\n        </Grid>\n        <Grid item>\n          <FilterButton label=\"Professional\" value={filters.professional} selected={filter === filters.professional} onFilterClick={handleFilterClick} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ProjectFilter;\n","import React from 'react';\n\nimport Icon from '@material-ui/core/Icon';\nimport { loadCSS } from 'fg-loadcss';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nfunction FontAwesomeIcon(props) {\n  const { className, name } = props;\n\n  React.useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#font-awesome-css'),\n    );\n  }, []);\n\n  return <Icon className={clsx(className, name)} />;\n}\n\nFontAwesomeIcon.propTypes = {\n  name: PropTypes.string.isRequired, // the <i> tag found after selecting an icon at: https://fontawesome.com/icons?d=gallery\n  className: PropTypes.string,\n};\n\nFontAwesomeIcon.defaultProps = {\n  className: '',\n};\n\nexport default FontAwesomeIcon;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FontAwesomeIcon from './FontAwesomeIcon';\n\nconst useStyles = makeStyles({\n  portfolioIcon: {\n    color: '#2CCD70',\n    fontSize: '55px',\n  },\n  centerText: {\n    textAlign: 'center',\n  },\n  title: {\n    color: '#333335',\n    fontWeight: 'bold',\n    marginTop: '25px',\n  },\n  subTitle: {\n    marginTop: '10px',\n    color: '#99999b',\n  },\n\n});\n\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container className={classes.centerText}>\n        <Grid item xs={12}><FontAwesomeIcon name=\"fas fa-folder-open\" className={classes.portfolioIcon} /></Grid>\n        <Grid item xs={12}><Typography className={classes.title} variant=\"h3\">Greg McLean</Typography></Grid>\n        <Grid item xs={12}><Typography className={classes.subTitle} variant=\"h6\">Delivering results through focus and collaboration</Typography></Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Helmet from 'react-helmet';\nimport ProjectFilterButtons from './ProjectFilter';\nimport Header from './Header';\n\nconst useStyles = makeStyles({\n  root: {\n    paddingTop: '40px',\n  },\n});\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <ProjectFilterButtons />\n      <Helmet bodyAttributes={{ style: 'background-color : #f5f5f7' }} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}